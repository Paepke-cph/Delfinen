DROP DATABASE if exists Delfinen;
CREATE DATABASE DELFINEN;
USE DELFINEN;

CREATE TABLE MEMBERS (
	MEMBER_NAME VARCHAR(50) NOT NULL,
    AGE INT NOT NULL,
    SUBSCRIPTION INT NULL,
    ACTIVE TINYINT NULL,
    ARREARS TINYINT NULL,
    MEMBER_ID INT NOT NULL AUTO_INCREMENT,
    COACH_ID INT NULL,
    PRIMARY KEY (MEMBER_ID)
);

CREATE TABLE DISCIPLINES(
	DISCIPLINE_NAME VARCHAR(40) NOT NULL UNIQUE,
    DISCIPLINE_ID INT NOT NULL,
    PRIMARY KEY (DISCIPLINE_ID)
);

CREATE TABLE DISCIPLINE_MEMBER (
	MEMBER_ID INT NOT NULL,
    DISCIPLINE_ID INT NOT NULL,
    PRIMARY KEY (DISCIPLINE_ID, MEMBER_ID),
    FOREIGN KEY (MEMBER_ID)
		REFERENCES MEMBERS (MEMBER_ID),
	FOREIGN KEY (DISCIPLINE_ID)
		REFERENCES DISCIPLINES (DISCIPLINE_ID)
);

CREATE TABLE COMPETITION_RESULTS (
	EVENT_NAME VARCHAR(50) NOT NULL,
	DISCIPLINE_ID INT NOT NULL,
    EVENT_DATE DATE NOT NULL,
    BEST_TIME TIME NOT NULL,
    PLACEMENT INT NOT NULL,
    MEMBER_ID INT NOT NULL,
    COMPETITION_ID INT NOT NULL AUTO_INCREMENT UNIQUE,
    PRIMARY KEY (DISCIPLINE_ID, MEMBER_ID),
    FOREIGN KEY (MEMBER_ID)
		REFERENCES MEMBERS (MEMBER_ID),
	FOREIGN KEY (DISCIPLINE_ID)
		REFERENCES DISCIPLINES (DISCIPLINE_ID)
);

CREATE TABLE TRAINING_RESULTS (
	DISCIPLINE_ID INT NOT NULL,
    TRAINING_DATE DATE NOT NULL,
    BEST_TIME TIME NOT NULL,
    MEMBER_ID INT NOT NULL,
    TRAINING_ID INT NOT NULL AUTO_INCREMENT UNIQUE,
    PRIMARY KEY (DISCIPLINE_ID, MEMBER_ID),
    FOREIGN KEY (MEMBER_ID)
		REFERENCES MEMBERS (MEMBER_ID),
	FOREIGN KEY (DISCIPLINE_ID)
		REFERENCES DISCIPLINES (DISCIPLINE_ID)
);

COMMIT;
    

